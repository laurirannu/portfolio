{"version":3,"sources":["Pics/flowers.jpg","Pics/line.jpeg","Pics/city.jpg","Pics/roses.jpg","Pics/street.jpg","Pics/wave.jpeg","Portfolio Items/Items.js","About/About.js","Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Items","renderItems","item","key","src","className","react_default","a","createElement","alt","_this2","this","items","props","Zoom_default","map","React","Component","ZoomExample","Rotate_default","lorem","Header","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isOn","onToggle","e","setState","Header_Switch","handleToggle","bind","Switch","classNames","join","onClick","Header_ToggleButton","ToggleButton","App","pics","require","picturePage","handleSlider","window","scrollTo","src_Header_Header","src_Portfolio_Items_Items","About_About","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88fd6a22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flowers.811476e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/line.b9094eac.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/city.024f4435.jpg\";","module.exports = __webpack_public_path__ + \"static/media/roses.a45e5c4a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/street.a15981ca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wave.fe7d08ef.jpeg\";","import React from 'react';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport './Items.css';\r\n\r\nclass Items extends React.Component {\r\n    renderItems = (item, key) => {\r\n        const { src, className } = item;\r\n\r\n        return (\r\n            <li className={className} key={key}>\r\n                <img src={src} alt=\"pic\" />\r\n            </li>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { items } = this.props;\r\n        return (\r\n            <Zoom>\r\n                <ul className=\"portfolio\">\r\n                    {items.map((item, key) => this.renderItems(item, key))}\r\n                </ul>\r\n            </Zoom>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Items;","import React from 'react';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport Rotate from 'react-reveal/Rotate';\r\nimport './About.css';\r\n\r\nconst ZoomExample = (props) => {\r\n\r\n    return (\r\n        <div className=\"content-wrapper\">\r\n            <Rotate >\r\n                <h1 className=\"title\">About Us</h1>\r\n            </Rotate>\r\n            <Zoom >\r\n                <p className=\"content\">\r\n                    {props.lorem}\r\n                </p>\r\n            </Zoom>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ZoomExample;\r\n\r\n","import React from 'react';\r\nimport './Header.scss';\r\n\r\nclass Header extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {isOn: false};\r\n\t\tthis.onToggle = this.props.onToggle;\r\n\t}\r\n\t\r\n\thandleToggle(e) {\r\n\t\tthis.setState({isOn: !this.state.isOn});\r\n\t\tthis.onToggle();\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"component-wrapper\">\r\n                <p>Portfolio</p>\r\n\t\t\t\t<Switch \r\n\t\t\t\t\tisOn={this.state.isOn}\t\r\n\t\t\t\t\thandleToggle={this.handleToggle.bind(this)}\r\n\t\t\t\t/>\r\n                <p>About</p>\r\n\t\t\t</div>\t\t\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst Switch = function(props) {\r\n\tlet classNames = [\"switch\", (props.isOn) ? \"switch_is-on\" : \"switch_is-off\"].join(\" \");\r\n\treturn (\r\n\t\t<div className={classNames} onClick={props.handleToggle}>\r\n\t\t\t<ToggleButton \r\n\t\t\t\tisOn={props.isOn}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst ToggleButton = function(props) {\r\n\t\tlet classNames = [\"toggle-button\", (props.isOn) ? \"toggle-button_position-right\" : \"toggle-button_position-left\"].join(\" \");\r\n\t\treturn (<div className={classNames}></div>);\r\n};\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport Items from './Portfolio Items/Items';\r\nimport ZoomExample from './About/About';\r\nimport './App.css';\r\nimport Header from './Header/Header';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    pics: [\r\n      {\r\n        src: require(\"./Pics/flowers.jpg\"), className: \"portfolio-item medium\"\r\n      },\r\n      {\r\n        src: require(\"./Pics/line.jpeg\"), className: \"portfolio-item large\"\r\n      },\r\n      {\r\n        src: require(\"./Pics/city.jpg\"), className: \"portfolio-item medium\"\r\n      },\r\n      {\r\n        src: require(\"./Pics/roses.jpg\"), className: \"portfolio-item small\"\r\n      },\r\n      {\r\n        src: require(\"./Pics/street.jpg\"), className: \"portfolio-item tall\"\r\n      },\r\n      {\r\n        src: require(\"./Pics/wave.jpeg\"), className: \"portfolio-item wide\"\r\n      }\r\n    ], \r\n    picturePage: true,\r\n    lorem: \" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut malesuada tellus ac mi volutpat, ut condimentum dui lobortis. Praesent cursus, mauris nec aliquet tristique, nulla urna sodales eros, nec sodales nulla ipsum id ante. Donec id elit posuere, sollicitudin nunc non, placerat lacus. Maecenas ac placerat erat. Nulla tristique erat neque, id placerat purus accumsan eu. In mi enim, tristique nec dignissim sed, molestie eget urna. Phasellus commodo nisi et mauris molestie tempus. Sed pulvinar mi in sapien laoreet, vitae commodo mi porta. Aliquam bibendum, orci eu viverra commodo, neque ligula efficitur erat, sit amet porttitor libero orci at ipsum. Morbi urna orci, congue ut elementum id, venenatis sed mauris. Nulla consectetur consectetur molestie. Donec semper ac ante ut tincidunt\"\r\n  }\r\n\r\n  componentDidUpdate() {\r\n      window.scrollTo(0, 0);\r\n  }\r\n\r\n  handleSlider = () => {\r\n    this.setState({picturePage: !this.state.picturePage})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"main-content\">\r\n          <Header onToggle={this.handleSlider}/>\r\n          {this.state.picturePage ? \r\n          <Items items={this.state.pics}/> :\r\n          <ZoomExample lorem={this.state.lorem}/>  \r\n        }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}